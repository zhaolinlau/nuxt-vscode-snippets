{
	"Nuxt useFetch": {
		"prefix": "nfetch",
		"body": [
			"const { data: ${1:name} } = await useFetch('${2:path}')"
		],
		"description": "Nuxt useFetch composable"
	},
	"Nuxt $fetch": {
		"prefix": "ndfetch",
		"body": [
			"await $$fetch('${1:path}')"
		],
		"description": "Nuxt $fetch "
	},
	"Nuxt $fetch - POST": {
		"prefix": "ndfetch-post",
		"body": [
			"await $$fetch('${1:path}',{",
			"\tmethod: 'POST',",
			"\tbody: {",
			"\t\t${2}",
			"\t}",
			"})"
		],
		"description": "Nuxt $fetch POST"
	},
	"Nuxt $fetch - PUT": {
		"prefix": "ndfetch-put",
		"body": [
			"await $$fetch('${1:path}',{",
			"\tmethod: 'PUT',",
			"\tbody: {",
			"\t\t${2}",
			"\t}",
			"})"
		],
		"description": "Nuxt $fetch PUT"
	},
	"Nuxt $fetch - DELETE": {
		"prefix": "ndfetch-delete",
		"body": [
			"await $$fetch('${1:path}',{",
			"\tmethod: 'DELETE',",
			"\tbody: {",
			"\t\t${2}",
			"\t}",
			"})"
		],
		"description": "Nuxt $fetch DELETE"
	},
	"Nuxt useLazyFetch": {
		"prefix": "nfetch-lazy",
		"body": [
			"const { data: ${1:name} } = await useLazyFetch('${2:path}')"
		],
		"description": "Nuxt useLazyFetch composable"
	},
	"Nuxt useAsyncData": {
		"prefix": "nasyncdata",
		"body": [
			"const { data: ${1:name} } = await useAsyncData('${2:requestKey}', () => \\$fetch('${3:path}'))"
		],
		"description": "Nuxt useAsyncData composable"
	},
	"Nuxt useLazyAsyncData": {
		"prefix": "nasyncdata-lazy",
		"body": [
			"const { data: ${1:name} } = await useLazyAsyncData('${2:requestKey}', () => \\$fetch('${3:path}'))"
		],
		"description": "Nuxt useLazyAsyncData composable"
	},
	"Nuxt useRequestHeaders": {
		"prefix": "nreqheaders",
		"body": [
			"useRequestHeaders()"
		],
		"description": "Nuxt useRequestHeaders composable"
	},
	"Nuxt useRequestFetch": {
		"prefix": "nreqfetch",
		"body": [
			"useRequestFetch()"
		],
		"description": "Nuxt useRequestFetch composable"
	},
	"Nuxt useNuxtData": {
		"prefix": "ndata",
		"body": [
			"useNuxtData(${0:key})"
		],
		"description": "Nuxt useNuxtData composable"
	},
	"Nuxt refreshNuxtData": {
		"prefix": "nrfshdata",
		"body": [
			"refreshNuxtData(${0:keys})"
		],
		"description": "Nuxt refreshNuxtData utility"
	},
	"Nuxt clearNuxtData": {
		"prefix": "nclrdata",
		"body": [
			"clearNuxtData(${0:keys})"
		],
		"description": "Nuxt clearNuxtData utility"
	},
	"Nuxt useHead": {
		"prefix": "nhead",
		"body": [
			"useHead({",
			"\ttitle: ${1:pageTitle},",
			"})"
		],
		"description": "Nuxt useHead composable"
	},
	"Nuxt useHead with description": {
		"prefix": "nhead-description",
		"body": [
			"useHead({",
			"\ttitle: ${1:pageTitle},",
			"\tmeta: [",
			"\t\t{ name: 'description', content: ${2:pageDescription} },",
			"\t],",
			"})"
		],
		"description": "Nuxt useHead composable with description"
	},
	"Nuxt useHead - Title template": {
		"prefix": "nhead-template",
		"body": [
			"useHead({",
			"\ttitleTemplate: (titleChunk) => {",
			"\t\treturn titleChunk ? `\\${titleChunk} - ${1:siteTitle}` : '${1:siteTitle}'",
			"\t}",
			"})"
		],
		"description": "Nuxt useHead composable with title template"
	},
	"Nuxt definePageMeta": {
		"prefix": "npagemeta",
		"body": [
			"definePageMeta({",
			"\t${0}",
			"})"
		],
		"description": "Nuxt definePageMeta composable"
	},
	"Title - Nuxt definePageMeta ": {
		"prefix": "npagemeta-title",
		"body": [
			"definePageMeta({",
			"\ttitle: '${1:pageTitle}',",
			"})"
		],
		"description": "Nuxt definePageMeta composable with Title"
	},
	"Title, Description - Nuxt definePageMeta": {
		"prefix": "npagemeta-description",
		"body": [
			"definePageMeta({",
			"\ttitle: '${1:pageTitle}',",
			"\tmeta: [",
			"\t\t{ name: 'description', content: '${2:pageDescription}' },",
			"\t],",
			"})"
		],
		"description": "Nuxt definePageMeta composable with title, Description"
	},
	"Layout - Nuxt definePageMeta": {
		"prefix": "npagemeta-layout",
		"body": [
			"definePageMeta({",
			"\tlayout: '${1:name}',",
			"})"
		],
		"description": "Nuxt definePageMeta composable with layout"
	},
	"Middleware - Nuxt definePageMeta": {
		"prefix": "npagemeta-middleware",
		"body": [
			"definePageMeta({",
			"\tmiddleware: ['${1:name}'],",
			"})"
		],
		"description": "Nuxt definePageMeta composable with Middleware"
	},
	"Middleware, Layout - Nuxt definePageMeta": {
		"prefix": "npagemeta-ml",
		"body": [
			"definePageMeta({",
			"\tmiddleware: ['${1:name}'],",
			"\tlayout: '${1:name}',",
			"})"
		],
		"description": "Nuxt definePageMeta composable with Middleware and layout"
	},
	"Nuxt define plugin": {
		"prefix": "nplugin",
		"body": [
			"export default defineNuxtPlugin(nuxtApp => {",
			"\t${0}",
			"})",
		],
		"description": "Base code for Nuxt plugin"
	},
	"Nuxt define middleware": {
		"prefix": "nmiddleware",
		"body": [
			"export default defineNuxtRouteMiddleware((to, from) => {",
			"\t${0}",
			"})",
		],
		"description": "Base code for Nuxt middleware"
	},
	"Nuxt define server": {
		"prefix": "nserver",
		"body": [
			"export default defineEventHandler((event) => {",
			"\t${0}",
			"})",
		],
		"description": "Base code for Nuxt server"
	},
	"Nuxt useError": {
		"prefix": "nerr",
		"body": [
			"useError()"
		],
		"description": "Nuxt useError composable"
	},
	"Nuxt createError": {
		"prefix": "ncerr",
		"body": [
			"throw createError(${0:err})"
		],
		"description": "Nuxt createError utility"
	},
	"Nuxt showError": {
		"prefix": "nshwerr",
		"body": [
			"showError(${0:error})"
		],
		"description": "Nuxt showError utility"
	},
	"Nuxt clearError": {
		"prefix": "nclrerr",
		"body": [
			"clearError(${0:options})"
		],
		"description": "Nuxt clearError utility"
	}
}